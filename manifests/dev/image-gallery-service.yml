apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: image-gallery-service
  labels:
    app: image-gallery-service
spec:
  selector:
    matchLabels:
      app: image-gallery-service
  serviceName: image-gallery-service
  template:
    metadata:
      labels:
        app: image-gallery-service
    spec:
      containers:
        - name: image-gallery-service
          image: image-gallery-service
          imagePullPolicy: Never
          env:
            - name: DATASOURCE_URL
              value: "jdbc:postgresql://postgresql.image-gallery-env:5432/image_gallery"
            - name: BLOBSTORE_FS_ROOT_PATH
              value: /var/data/blobstore
            - name: BLOBSTORE_FS_BASE_URL
              value: http://localhost:8080/uploads/
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 3
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          volumeMounts:
            - mountPath: /var/data/blobstore
              name: blobstore

  volumeClaimTemplates:
    - metadata:
        name: blobstore
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: image-gallery-service-hl
  labels:
    app: image-gallery-service-hl
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: image-gallery-service
  ports:
    - name: http
      port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: image-gallery-service
  labels:
    app: image-gallery-service
spec:
  type: LoadBalancer
  selector:
    app: image-gallery-service
  ports:
    - name: http
      port: 8080
